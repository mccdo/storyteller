#
# This module is provided as @CMAKE_PROJECT_NAME@_USE_FILE by @CMAKE_PROJECT_NAME@Config.cmake.  It can
# be INCLUDEd in a project to load the needed compiler and linker
# settings to use @CMAKE_PROJECT_NAME@.
#

IF(NOT @CMAKE_PROJECT_NAME@_USE_FILE_INCLUDED)
  SET(@CMAKE_PROJECT_NAME@_USE_FILE_INCLUDED 1)

  # Update CMAKE_MODULE_PATH so includes work.
  #SET (CMAKE_MODULE_PATH
  #  ${CMAKE_MODULE_PATH}
  #  ${@CMAKE_PROJECT_NAME@_CMAKE_DIR})

  # Add compiler flags needed to use @CMAKE_PROJECT_NAME@.
  #SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${@CMAKE_PROJECT_NAME@_REQUIRED_C_FLAGS}")
  #SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${@CMAKE_PROJECT_NAME@_REQUIRED_CXX_FLAGS}")
  #SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${@CMAKE_PROJECT_NAME@_REQUIRED_EXE_LINKER_FLAGS}")
  #SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${@CMAKE_PROJECT_NAME@_REQUIRED_SHARED_LINKER_FLAGS}")
  #SET(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} ${@CMAKE_PROJECT_NAME@_REQUIRED_MODULE_LINKER_FLAGS}")

  # Add include directories needed to use @CMAKE_PROJECT_NAME@.
  INCLUDE_DIRECTORIES(${@CMAKE_PROJECT_NAME@_INCLUDE_DIRS})

ENDIF(NOT @CMAKE_PROJECT_NAME@_USE_FILE_INCLUDED)
